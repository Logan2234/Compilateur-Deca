// little typing game 

#include "io.deca"
#include "time.deca"
#include "random.deca"

class Game {
    LinkedChars ESCAPECHAR = new LinkedChars();
    protected IO io = new IO();
    protected Timer timer = new Timer();
    protected Random random = new Random();

    Timer getTimer(){
        return timer;
    }

    IO getIO(){
        return io;
    }

    Random getRandom(){
        return random;
    }

    void clearScreen(){
        int i = 0;
        while (i < 60) {
            println("");
            i = i + 1;
        }
    }

    void printDelayedNum(int num){
        print(num);
        timer.wait(0.25);
        print(".");
        timer.wait(0.25);
        print(".");
        timer.wait(0.25);
        print(". ");
        timer.wait(0.25);
    }

    // Normalize score gained and time left print
    void normalize(int size){
        int i;
        i = 2 * size - 1 + 3;
        while (i < 35){
            print(" ");
            i = i + 1;
        }
    }

    void gameLoop(){
        // Decl vars
        boolean play = true;
        LinkedChars currentChar;
        LinkedChars userInput; 
        String str;
        int taille;
        int score = 0;
        int offset = 0;
        boolean wonWord;
        float time = 0;
        float gameDuration = 30;
        
        // Counter 3 2 1 GO
        clearScreen();
        print("Game will start in... ");
        printDelayedNum(3);
        printDelayedNum(2);
        printDelayedNum(1);
        print("GOOOO!");
        println("");

        // Setup the timer
        timer.reset();

        // Loop over words
        while (play && timer.timeSec() < gameDuration){ 
            str = random.generateRandomString(random, 5 + offset, 8 + offset);
            taille = str.getSize();
            wonWord = true;
            
            println("");
            str.display(io);
            
            // Loop over letters
            while (str.getSize() > 0) {
                currentChar = str.getFirst();
                userInput = io.readChar();
                if (userInput.equals(ESCAPECHAR)) {
                    play = false;
                    str = new String();
                } else {
                    if (!currentChar.equals(userInput)) {
                        print("/");
                        str.pop();
                        while(str.getSize() > 0) {
                            print(" -");
                            str.pop();
                        }
                        wonWord = false;
                    }
                    else {
                        io.printChar(userInput.getValue());
                        print(" ");
                        str.pop();
                    }
                }
            }

            // Ending phase
            if (wonWord && timer.timeSec() < gameDuration){
                normalize(taille);
                print("=> + ", taille, " time left : ", gameDuration - timer.timeSec(), "s.");
                score = score + taille;
                offset = offset + 1;
            } else {
                normalize(taille);
                print("=> + 0 time left : ", gameDuration - timer.timeSec(), "s.");
            }
            println("");
        }
        // End of the round
        println("");
        println("Finished ! Score: ", score);
        home();
    }

    void home(){
        int choice;
        println("");
        println(" ===== Menu =====");
        println("");
        println("1. How to play");
        println("2. Play");
        println("3. Quit");
        println("");
        print("Choice: ");
        choice = readInt();
        println("");

        if (choice == 2) {
            gameLoop();
        } else if (choice == 1) {
            howToPlay();
            home();
        } else {
            println("Bye!");
        }
        
    }
    
    void howToPlay() {
        clearScreen();
        println(" ===== How to play =====");
        println("");
        println("Sequence of letters will appear.");
        println("You will have 30 seconds to type as much sequences as possible.");
        println("Each completed sequence will give you points accordingly to the sequence size.");
        println("However, if you miss a single character, you won't get a single point..");
        println("");
        println("Have fun!");
    }

    void start(){
        // init values
        ESCAPECHAR.setChar(27);

        // cool display °3°
        clearScreen();
        print("W");
        timer.waitASemiSemiSec();
        print("e");
        timer.waitASemiSemiSec();
        print("l");
        timer.waitASemiSemiSec();
        print("c");
        timer.waitASemiSemiSec();
        print("o");
        timer.waitASemiSemiSec();
        print("m");
        timer.waitASemiSemiSec();
        print("e ");
        timer.waitASemiSemiSec();
        print("t");
        timer.waitASemiSemiSec();
        print("o ");
        timer.waitASemiSemiSec();
        print("W");
        timer.waitASemiSemiSec();
        print("o");
        timer.waitASemiSemiSec();
        print("r");
        timer.waitASemiSemiSec();
        print("d");
        timer.waitASemiSemiSec();
        print(" T");
        timer.waitASemiSemiSec();
        print("y");
        timer.waitASemiSemiSec();
        print("p");
        timer.waitASemiSemiSec();
        print("e");
        timer.waitASemiSemiSec();
        println("r!");
        home();
    }
}

{
    Game game = new Game();
    game.start();
}